---
version: "3"

env:
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/provision/kubernetes/ansible.cfg"
  K8S_AUTH_KUBECONFIG: "{{.PROJECT_DIR}}/kubeconfig"

vars:


tasks:

  init:
    desc: Install / Upgrade Ansible galaxy deps
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - pip3 install --user --requirement requirements.txt
      - ansible-galaxy install -r requirements.yml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yml --collections-path ~/.ansible/collections --force

  list:
    desc: List all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts

  htpc-install:
    vars:
      ANSIBLE_TARGET: "htpc"
      ANSIBLE_TARGET_DIR: "{{.ANSIBLE_DIR}}/{{.ANSIBLE_TARGET}}"
      ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_TARGET_DIR}}/playbooks"
      ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_TARGET_DIR}}/inventory"
    desc: htpc-install
    dir: "{{.ANSIBLE_TARGET_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/htpc-install.yml

  ping:
    desc: Ping all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'uptime'

  force-reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yml

  force-poweroff:
    desc: Shutdown all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmds:
      - ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/usr/bin/systemctl poweroff' --become
