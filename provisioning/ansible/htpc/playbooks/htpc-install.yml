---
- hosts:
    - raspimedia.lan
  become: true
  gather_facts: true
  any_errors_fatal: true
  # pre_tasks:
  #   - name: Pausing for 5 seconds...
  #     ansible.builtin.pause:
  #       seconds: 5
  tasks:
    - name: OS common tasks
      include_role:
        name: os-common

    - name: APT
      block:
        - name: Backports repo
          include_role:
            name: backports-repo

        - name: Setup unattended-upgrades
          ansible.builtin.include_role:
            name: hifis.unattended_upgrades

    - name: Pulseaudio
      block:
        - name: Install Pulseaudio
          ansible.builtin.include_role:
            name: mjanser.pulseaudio
          vars:
            # Run: pacmd list-cards
            # name and activeprofile needed
            pulseaudio_card_profiles:
              - card: alsa_card.usb-E__Corp._DAC_Audio-01
                profile: output:analog-stereo
            pulseaudio_sink_formats:
              - sink: alsa_output.usb-E__Corp._DAC_Audio-01.analog-stereo
                formats: "pcm"
            pulseaudio_network: no
            pulseaudio_avahi: no
        - name: Pulseaudio groups
          user:
            name: "{{ inventory_username }}"
            append: yes
            groups:
              - pulse-access
              - audio

    - name: Docker
      block:
        - name: Install and configure Docker
          ansible.builtin.include_role:
            name: geerlingguy.docker
        # - name: Install Docker Module for Python
        #   pip:
        #     name: docker
        - name: Install pip
          ansible.builtin.include_role:
            name: geerlingguy.pip
          vars:
            pip_install_packages:
              - name: docker
              - name: docker-compose
        - name: Create directory for docker compose file
          file:
            path: /home/{{ inventory_username }}/docker
            state: directory
        - name: Downloading docker compose file
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/zhorvath83/raspotify/654d51f056ff1a7d3612a6793ad94e60f3247b88/docker-compose.yaml
            dest: /home/{{ inventory_username }}/docker
        - name: Tear down existing docker services
          community.docker.docker_compose:
            project_src: /home/{{ inventory_username }}/docker
            state: absent

        - name: Create and start services
          community.docker.docker_compose:
            project_src: /home/{{ inventory_username }}/docker
          register: output

        - ansible.builtin.debug:
            var: output

        - name: Run `docker-compose up` again
          community.docker.docker_compose:
            project_src: /home/{{ inventory_username }}/docker
            build: false
          register: output

        - ansible.builtin.debug:
            var: output

        - ansible.builtin.assert:
            that: not output.changed

    - name: Install and configure Kodi
      ansible.builtin.include_role:
        name: jose1711.kodi_ansible_role
      vars:
        packages:
          - kodi
          - sqlite3
          - kodi-eventclients-kodi-send
          - libxml2-utils
          - unzip
          - python3-lxml
          - acl

    # Dumping actual EDID file
    # sudo cp /sys/devices/platform/gpu/drm/card?/card?-HDMI-A-1/edid /lib/firmware/edid.dat
    - name: Copy EDID file
      ansible.builtin.copy:
        src: files/edid.dat
        dest: /lib/firmware/edid.dat

    - name: Kodi service
      include_role:
        name: mediaplayers

  # roles:
  #   - { role: roles/mediaplayers}

  # RECOMMENDED: This role will lock down ssh access to disallow password login
  # and make other security improvements to the default ssh setup.
  # https://github.com/dev-sec/ansible-ssh-hardening
  #- role: dev-sec.ssh-hardening
  #  become: yes
