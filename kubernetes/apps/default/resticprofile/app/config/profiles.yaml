---
# yaml-language-server: $schema=https://creativeprojects.github.io/resticprofile/jsonschema/config-1.json
version: "1"

global:
  scheduler: crond
  default-command: snapshots
  restic-lock-retry-after: 5m
  restic-stale-lock-age: 24h

backups:
  repository: "{{ .Env.RESTIC_REPOSITORY_TEMPLATE }}backups"
  lock: "/tmp/resticprofile-profile-backups.lock"
  force-inactive-lock: true
  compression: auto
  initialize: true
  verbose: true
  priority: low

  backup:
    schedule: 01:00
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-backups-execute.log
    schedule-permission: user
    schedule-lock-wait: 1h
    source:
      - /backups
    exclude: []
    no-error-on-warning: true
    send-before:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_BACKUPS_WEBHOOK }}/start"
    send-after:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_BACKUPS_WEBHOOK }}"
    send-after-fail:
      method: POST
      url: "{{ .Env.HEALTHCHECK_BACKUPS_WEBHOOK }}/fail"
      body: "${ERROR}\n\n${ERROR_STDERR}"
      headers:
        - name: Content-Type
          value: "text/plain; charset=UTF-8"

  forget:
    schedule: "Sun 20:00"
    schedule-permission: user
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-backups-forget.log
    schedule-lock-mode: default
    schedule-lock-wait: 1h
    keep-hourly: 1
    keep-daily: 7
    keep-weekly: 4
    keep-monthly: 24
    prune: true

  check:
    schedule: "Sat 20:00"
    schedule-permission: user
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-backups-check.log
    schedule-lock-mode: default
    schedule-lock-wait: 1h
    read-data-subset: "100M"
    send-before:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_BACKUPS_CHECK_WEBHOOK }}/start"
    send-after:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_BACKUPS_CHECK_WEBHOOK }}"
    send-after-fail:
      method: POST
      url: "{{ .Env.HEALTHCHECK_BACKUPS_CHECK_WEBHOOK }}/fail"
      body: "${ERROR}\n\n${ERROR_STDERR}"
      headers:
        - name: Content-Type
          value: "text/plain; charset=UTF-8"

  restore:
    target: "/mnt/nfs-tmp/resticprofile-restore/backups"

legacy-backups:
  repository: "{{ .Env.RESTIC_REPOSITORY_TEMPLATE }}legacy-backups"
  lock: "/tmp/resticprofile-profile-legacy-backups.lock"
  force-inactive-lock: true
  compression: auto
  initialize: true
  verbose: true
  priority: low

  backup:
    schedule: 01:00
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-legacy-backups-execute.log
    schedule-permission: user
    schedule-lock-wait: 1h
    source:
      - /legacy-backups
    exclude: []
    no-error-on-warning: true
    send-before:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_WEBHOOK }}/start"
    send-after:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_WEBHOOK }}"
    send-after-fail:
      method: POST
      url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_WEBHOOK }}/fail"
      body: "${ERROR}\n\n${ERROR_STDERR}"
      headers:
        - name: Content-Type
          value: "text/plain; charset=UTF-8"

  forget:
    schedule: "Sun 20:00"
    schedule-permission: user
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-legacy-backups-forget.log
    schedule-lock-mode: default
    schedule-lock-wait: 1h
    keep-hourly: 1
    keep-daily: 7
    keep-weekly: 4
    keep-monthly: 24
    prune: true

  check:
    schedule: "Sat 20:00"
    schedule-permission: user
    schedule-log: /mnt/nfs-tmp/resticprofile-logs/resticprofile-legacy-backups-check.log
    schedule-lock-mode: default
    schedule-lock-wait: 1h
    read-data-subset: "100M"
    send-before:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_CHECK_WEBHOOK }}/start"
    send-after:
      - method: HEAD
        url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_CHECK_WEBHOOK }}"
    send-after-fail:
      method: POST
      url: "{{ .Env.HEALTHCHECK_LEGACY_BACKUPS_CHECK_WEBHOOK }}/fail"
      body: "${ERROR}\n\n${ERROR_STDERR}"
      headers:
        - name: Content-Type
          value: "text/plain; charset=UTF-8"

  restore:
    target: "/mnt/nfs-tmp/resticprofile-restore/legacy-backups"
