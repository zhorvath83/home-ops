---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      tandoor:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3
              pullPolicy: IfNotPresent
            env:
              - name: INIT_POSTGRES_HOST
                value: postgresql.default.svc.cluster.local
              - name: INIT_POSTGRES_DBNAME
                value: tandoor
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgresql-secret
                    key: postgres-password
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_PASSWORD

          02-init-migrate:
            image:
              repository: vabene1111/recipes
              tag: 1.5.17
              pullPolicy: IfNotPresent
            env:
              - name: DB_ENGINE
                value: django.db.backends.postgresql
              - name: POSTGRES_HOST
                value: postgresql.default.svc.cluster.local
              - name: POSTGRES_PORT
                value: 5432
              - name: POSTGRES_DB
                value: tandoor
            envFrom:
              - secretRef:
                  name: tandoor-secret
            command:
              - sh
              - -c
              - |
                set -e
                source venv/bin/activate
                echo "Updating database"
                python manage.py migrate
                python manage.py collectstatic_js_reverse
                python manage.py collectstatic --noinput
                echo "Done"

        containers:
          app:
            image:
              repository: vabene1111/recipes
              tag: 1.5.17
              pullPolicy: IfNotPresent

            env:
              DEBUG: "0"
              ALLOWED_HOSTS: "*"
              DB_ENGINE: django.db.backends.postgresql
              POSTGRES_HOST: postgresql.default.svc.cluster.local
              POSTGRES_PORT: 5432
              POSTGRES_DB: tandoor
              GUNICORN_MEDIA: "1"
              TIMEZONE: "Europe/Budapest"
              TANDOOR_PORT: 8080
              FRACTION_PREF_DEFAULT: "0"
              COMMENT_PREF_DEFAULT: "0"
              SHOPPING_MIN_AUTOSYNC_INTERVAL: "5"

            envFrom:
              - secretRef:
                  name: tandoor-secret

            command:
              - /opt/recipes/venv/bin/gunicorn
              - -b
              - :8080
              - --access-logfile
              - "-"
              - --error-logfile
              - "-"
              - --log-level
              - INFO
              - recipes.wsgi

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false

            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              # Could not handle readOnlyRootFilesystem
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                memory: 512Mi

    service:
      app:
        controller: tandoor
        ports:
          http:
            port: 8080

    ingress:
      app:
        className: "nginx"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Tandoor - recipes
          gethomepage.dev/group: Digital assets
          gethomepage.dev/icon: tandoor.svg
        hosts:
          - host: "recipes.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      mediafiles:
        type: persistentVolumeClaim
        existingClaim: tandoor
        globalMounts:
          - path: /opt/recipes/mediafiles
      staticfiles:
        type: emptyDir
        globalMounts:
          - path: /opt/recipes/staticfiles
      django-js-reverse:
        type: emptyDir
        globalMounts:
          - path: /opt/recipes/cookbook/static/django_js_reverse
