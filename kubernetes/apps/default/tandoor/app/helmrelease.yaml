---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: app-template
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      tandoor:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
              pullPolicy: IfNotPresent
            env:
              - name: INIT_POSTGRES_HOST
                value: postgresql.default.svc.cluster.local
              - name: INIT_POSTGRES_DBNAME
                value: tandoor
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgresql-secret
                    key: postgres-password
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: tandoor-secret
                    key: POSTGRES_PASSWORD

        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.0.2@sha256:79f337a334207d0fe49732197ee721f363aeaac8a600b75560e23c72ba5a8c25
              pullPolicy: IfNotPresent

            env:
              TZ: "Europe/Budapest"
              ALLOWED_HOSTS: "*"
              AI_MODEL_NAME: openai/gpt-4o
              POSTGRES_HOST: postgresql.default.svc.cluster.local
              POSTGRES_DB: tandoor
              DEBUG: 0
              DEFAULT_FROM_EMAIL: "recipes@${PUBLIC_DOMAIN}"
              EMAIL_HOST: smtp-relay.default.svc.cluster.local
              EMAIL_PORT: 25
              TANDOOR_PORT: 8000
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              FRACTION_PREF_DEFAULT: 0
              COMMENT_PREF_DEFAULT: 0
              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
              ENABLE_SIGNUP: 0
              DATABASE_URL: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgresql.default.svc.cluster.local:5432/tandoor"

            envFrom:
              - secretRef:
                  name: tandoor-secret

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 768Mi

    service:
      app:
        controller: tandoor
        ports:
          http:
            port: 8000

    ingress:
      app:
        className: "nginx"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Tandoor
          gethomepage.dev/group: Digital assets
          gethomepage.dev/icon: tandoor-recipes.svg
        hosts:
          - host: "recipes.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: tandoor
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/mediafiles
                subPath: mediafiles
              - path: /opt/recipes/staticfiles
                subPath: staticfiles
      tmpfs:
        type: emptyDir
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/cookbook/static/django_js_reverse
                subPath: django_js_reverse
              - path: /var/lib/nginx/logs
                subPath: nginx_logs
              - path: /var/lib/nginx/tmp
                subPath: nginx_tmp
              - path: /tmp
                subPath: tmp
