---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app photoview
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false

    controllers:
      main:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            fsGroup: 10001
            fsGroupChangePolicy: OnRootMismatch

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.1
              pullPolicy: IfNotPresent
            env:
              - name: INIT_POSTGRES_HOST
                value: postgresql.default.svc.cluster.local
              - name: INIT_POSTGRES_DBNAME
                value: *app
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgresql-secret
                    key: postgres-password
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: photoview-secret
                    key: POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: photoview-secret
                    key: POSTGRES_PASS

        containers:
          main:
            image:
              repository: viktorstrate/photoview
              tag: 2.3.13
              pullPolicy: IfNotPresent

            env:
              - name: TZ
                value: Europe/Budapest
              - name: PHOTOVIEW_LISTEN_IP
                value: 0.0.0.0
              - name: PHOTOVIEW_LISTEN_PORT
                value: &port 8080
              - name: PHOTOVIEW_DEVELOPMENT_MODE
                value: false
              - name: PHOTOVIEW_DISABLE_FACE_RECOGNITION
                value: true
              - name: PHOTOVIEW_MEDIA_CACHE
                value: /app/cache
              - name: MAPBOX_TOKEN
                value: ""
              # - name: PHOTOVIEW_DATABASE_DRIVER
              #   value: sqlite
              # - name: PHOTOVIEW_SQLITE_PATH
              #   value: /app/database/photoview.db
              - name: PHOTOVIEW_DATABASE_DRIVER
                value: postgres
              - name: PHOTOVIEW_POSTGRES_URL
                valueFrom:
                  secretKeyRef:
                    name: photoview-secret
                    key: PHOTOVIEW_POSTGRES_URL

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false

            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 2000Mi

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Photoview - photos
          gethomepage.dev/group: Digital assets
          gethomepage.dev/icon: photoview.svg
        hosts:
          - host: &host1 "photos.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: &host2 "fenykepek.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host1
              - *host2

    persistence:
      photos:
        enabled: true
        type: nfs
        path: /backups/Pictures
        readOnly: true
        server: ${CLUSTER_LAN_NAS_IP}
        globalMounts:
          - path: /photos

      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app
        globalMounts:
          - path: /app/cache
            readOnly: true
            subPath: cache
