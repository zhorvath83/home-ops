---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app photoview
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  # maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:

    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        env:
          - name: INIT_POSTGRES_HOST
            value: postgresql.default.svc.cluster.local
          - name: INIT_POSTGRES_DBNAME
            value: *app
          - name: INIT_POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgresql-secret
                key: postgres-password
          - name: INIT_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: photoview-secret
                key: POSTGRES_USER
          - name: INIT_POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: photoview-secret
                key: POSTGRES_PASS

    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: viktorstrate/photoview
      tag: 2.3.13

    env:
      - name: PHOTOVIEW_LISTEN_IP
        value: 0.0.0.0
      - name: PHOTOVIEW_LISTEN_PORT
        value: &port 8080
      - name: PHOTOVIEW_DEVELOPMENT_MODE
        value: false
      - name: PHOTOVIEW_DISABLE_FACE_RECOGNITION
        value: true
      - name: PHOTOVIEW_MEDIA_CACHE
        value: /app/cache
      - name: MAPBOX_TOKEN
        value: ""
      # - name: PHOTOVIEW_DATABASE_DRIVER
      #   value: sqlite
      # - name: PHOTOVIEW_SQLITE_PATH
      #   value: /app/database/photoview.db
      - name: PHOTOVIEW_DATABASE_DRIVER
        value: postgres
      - name: PHOTOVIEW_POSTGRES_URL
        valueFrom:
          secretKeyRef:
            name: photoview-secret
            key: PHOTOVIEW_POSTGRES_URL

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Photoview - photos
          gethomepage.dev/group: Multimedia
          gethomepage.dev/icon: photoview.svg
        hosts:
          - host: &host1 "photos.${PUBLIC_DOMAIN}"
            paths:
              - path: /
          - host: &host2 "fenykepek.${PUBLIC_DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *host1
              - *host2

    persistence:
      photos:
        enabled: true
        mountPath: /photos
        readOnly: true
        server: ${CLUSTER_LAN_NAS_IP}
        path: /backups/Pictures
        type: nfs

      data:
        enabled: true
        existingClaim: *app
        subPath:
          - path: cache
            mountPath: /app/cache

    podSecurityContext:
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
      fsGroupChangePolicy: OnRootMismatch

    securityContext:
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    resources:
      requests:
        cpu: 50m
        memory: 250Mi
      limits:
        memory: 2000Mi

# valuesFrom:
#   - kind: Secret
#     name: photoview-secret
#     valuesKey: PHOTOS_PATH
#     targetPath: persistence.photos.path
