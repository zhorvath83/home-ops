---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: calibre
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        # disabled for linuxserver.io image
        # runAsNonRoot: true
        # runAsUser: 10001
        # runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      calibre:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/calibre
              tag: v7.16.0-ls294@sha256:e179e32b1ed42814816e5379d08ee9d9f957f6e704c8695bd1ffece9668a9192
              pullPolicy: IfNotPresent

            env:
              TZ: Europe/Budapest
              PUID: 10001
              PGID: 10001

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

            # securityContext:
            #   # disabled for linuxserver.io image
            #   # privileged: false
            #   # allowPrivilegeEscalation: false
            #   # readOnlyRootFilesystem: true
            #   capabilities:
            #     drop:
            #       - ALL

            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2Gi

    service:
      app:
        primary: true
        controller: calibre
        ports:
          http:
            primary: true
            port: 8080
      content-server:
        controller: calibre
        ports:
          http:
            port: 8081

    ingress:
      app:
        className: "nginx"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Calibre
          gethomepage.dev/group: Downloading
          gethomepage.dev/icon: calibre.svg
        hosts:
          - host: &host "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

      content-server:
        className: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite ^/opds$ /opds/ permanent;
        hosts:
          - host: *host
            paths:
              - path: "/opds"
                pathType: Prefix
                service:
                  identifier: content-server
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: calibre
        globalMounts:
          - path: /config

      nfs-media-ebooks:
        type: nfs
        server: ${CLUSTER_LAN_NAS_IP}
        path: /media/ebooks
        globalMounts:
          - path: /media/ebooks

      nfs-media-ebooks-to-import:
        type: nfs
        server: ${CLUSTER_LAN_NAS_IP}
        path: /media/downloads/complete/ebooks
        globalMounts:
          - path: /media/ebooks-to-import
