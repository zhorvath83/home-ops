---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  # maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: lscr.io/linuxserver/sonarr
      tag: 3.0.10@sha256:7de58a98fe1abdde6980f09f3285c5efb466031d49e5376ae93bcc8e3da4acb6

    env:
      PUID: "10001"
      PGID: "10001"
      TZ: Europe/Budapest

    service:
      main:
        ports:
          http:
            port: &port 8989

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      readiness: *probes

      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Sonarr - shows management
          gethomepage.dev/group: Downloading
          gethomepage.dev/icon: sonarr.svg
        hosts:
          - host: &host "shows.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    # podSecurityContext:
    #   runAsUser: 10001
    #   runAsGroup: 10001
    #   fsGroup: 10001
    #   fsGroupChangePolicy: OnRootMismatch
    # securityContext:
    #   privileged: false
    #   allowPrivilegeEscalation: false
    #   # Could not handle readOnlyRootFilesystem
    #   seccompProfile:
    #     type: RuntimeDefault
    #   capabilities:
    #     drop:
    #       - ALL

    persistence:
      config:
        enabled: true
        existingClaim: *app
      nfs-media:
        enabled: true
        type: nfs
        server: ${CLUSTER_LAN_NAS_IP}
        path: /media
        mountPath: /media

    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
