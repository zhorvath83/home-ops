---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.419@sha256:5e39d17f1ad990aff1a930519daa75757ba100486feb9581ecea1aaae393a8ae

    env:
      TZ: Europe/Budapest
      PUSHOVER_DEBUG: "false"
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 80
      SONARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: sonarr-secret

    service:
      main:
        ports:
          http:
            port: *port

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3

      readiness: *probes

      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "{{ .Release.Name }}"
          gethomepage.dev/group: Multimedia
          gethomepage.dev/icon: "{{ .Release.Name }}.png"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
      fsGroupChangePolicy: OnRootMismatch
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: local-path

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${CLUSTER_LAN_NAS_IP}
        path: /Media
        mountPath: /media

      scripts:
        enabled: true
        type: configMap
        name: sonarr-configmap
        subPath: pushover-notify.sh
        mountPath: /scripts/pushover-notify.sh
        defaultMode: 0775
        readOnly: true

    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
