---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudflared
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m

  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        type: deployment
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            fsGroup: 10001
            fsGroupChangePolicy: OnRootMismatch

        containers:
          main:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2023.8.2
              pullPolicy: IfNotPresent

            env:
              - name: TZ
                value: "Europe/Budapest"
              - name: tunnel_name
                valueFrom:
                  secretKeyRef:
                    name: cloudflared-secret
                    key: tunnel_name

            args:
              - tunnel
              - --config
              - /etc/cloudflared/config.yaml
              - --cred-file
              - /etc/cloudflared/credentials.json
              - --metrics
              - 0.0.0.0:8080
              - --no-autoupdate
              - run
              - "$(tunnel_name)"
              # Tunnel name retreived from ENV var.

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10

            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                memory: 32Mi
                cpu: 10m
              limits:
                memory: 256Mi

    service:
      main:
        # nameOverride: metrics
        ports:
          http:
            port: 8080

    # serviceMonitor:
    #   main:
    #     enabled: true
    #     endpoints:
    #       - port: http
    #         scheme: http
    #         path: /metrics
    #         interval: 1m
    #         scrapeTimeout: 30s

    ingress:
      main:
        enabled: false

    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-config
        defaultMode: 0775
        globalMounts:
          - path: /etc/cloudflared/config.yaml
            subPath: config.yaml
            readOnly: true

      credentials:
        enabled: true
        type: secret
        name: cloudflared-secret
        defaultMode: 0775
        globalMounts:
          - path: /etc/cloudflared/credentials.json
            subPath: credentials.json
            readOnly: true
