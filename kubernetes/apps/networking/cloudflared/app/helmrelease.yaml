---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudflared
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false

  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      cloudflared:
        type: deployment
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2024.5.0
              pullPolicy: IfNotPresent

            env:
              - name: TZ
                value: "Europe/Budapest"
              - name: tunnel_name
                valueFrom:
                  secretKeyRef:
                    name: cloudflared-secret
                    key: tunnel_name

            args:
              - tunnel
              - --config
              - /etc/cloudflared/config.yaml
              - --cred-file
              - /etc/cloudflared/credentials.json
              - --metrics
              - 0.0.0.0:8080
              - --no-autoupdate
              - run
              - "$(tunnel_name)"
              # Tunnel name retreived from ENV var.

            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 15
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10

            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                memory: 32Mi
                cpu: 10m
              limits:
                memory: 256Mi

    service:
      app:
        controller: cloudflared
        ports:
          http:
            port: 8080

    persistence:
      config:
        type: configMap
        name: cloudflared-config
        defaultMode: 0775
        globalMounts:
          - path: /etc/cloudflared/config.yaml
            subPath: config.yaml
            readOnly: true

      credentials:
        type: secret
        name: cloudflared-secret
        defaultMode: 0775
        globalMounts:
          - path: /etc/cloudflared/credentials.json
            subPath: credentials.json
            readOnly: true
