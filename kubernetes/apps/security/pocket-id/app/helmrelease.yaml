---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pocket-id
  namespace: security
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: pocket-id
    namespace: flux-system
  values:
    controllers:
      pocket-id:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/pocket-id/pocket-id
              tag: v1.13.1@sha256:d4c4c5355cc5ce25dfb34ed59f61c7d258ad39fb6345de452d11941b7209ddd4
            env:
              TZ: Europe/Budapest
              ANALYTICS_DISABLED: true
              APP_URL: https://id.${PUBLIC_DOMAIN}
              DB_PROVIDER: sqlite
              EMAILS_VERIFIED: true
              KEYS_STORAGE: database
              # UI_CONFIG_DISABLED: true
              SESSION_DURATION: 43800
              TRUST_PROXY: true
              UPLOAD_PATH: /app/data/uploads
              GEOLITE_DB_PATH: /app/data/GeoLite2-City.mmdb

            envFrom:
              - secretRef:
                  name: pocket-id-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 1411
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        fsGroupChangePolicy: Always
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: "tunnel.${PUBLIC_DOMAIN}"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-traefik-middleware-chain-no-auth@kubernetescrd"
        hosts:
          - host: "id.${PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /app/data
      tmpfs:
        type: emptyDir
        advancedMounts:
          pocket-id:
            app:
              - path: /tmp
                subPath: tmp
