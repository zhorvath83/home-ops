---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.2.3
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
  values:
    persistence:
      defaultClass: true
      defaultClassReplicaCount: 2
      reclaimPolicy: Retain
      recurringJobSelector:
        enabled: true
        jobList: '[{"name":"default", "isGroup":true}]'

    defaultSettings:
      upgradeChecker: false
      priorityClass: high-priority
      defaultDataPath: /var/lib/longhorn
      storageOverProvisioningPercentage: 200
      storageMinimalAvailablePercentage: 25
      guaranteedEngineManagerCPU: 8
      guaranteedReplicaManagerCPU: 8
      autoDeletePodWhenVolumeDetachedUnexpectedly: true
      disableSchedulingOnCordonedNode: false
      replicaZoneSoftAntiAffinity: false
      replicaSoftAntiAffinity: false
      defaultReplicaCount: 2
      defaultLonghornStaticStorageClass: longhorn
      defaultDataLocality: best-effort
      replicaAutoBalance: best-effort
      allowNodeDrainWithLastHealthyReplica: true
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      backupstorePollInterval: 500
      backupTarget: nfs://${CLUSTER_LAN_NAS_IP}:/backup/LonghornBackupstore

    csi:
      attacherReplicaCount: 2
      provisionerReplicaCount: 2
      resizerReplicaCount: 2
      snapshotterReplicaCount: 2

    # BEST PRACTICES - https://longhorn.io/docs/1.2.2/best-practices/
    longhornManager:
      priorityClass: "system-node-critical"
    longhornDriver:
      priorityClass: "system-node-critical"
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15

    ingress:
      enabled: true
      ingressClassName: "traefik"
      host: "longhorn.${SECRET_DOMAIN}"
      tls: true
      tlsSecret: "${SECRET_DOMAIN/./-}-tls"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.middlewares: networking-middleware-chain-cf-auth@kubernetescrd

    resources:
      requests:
        cpu: "50m"
        memory: "50Mi"
      limits:
        cpu: "250m"
        memory: "500Mi"