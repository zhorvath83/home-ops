---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: traefik
      version: 10.14.1
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
  rollback:
    timeout: 10m
    recreate: true

  dependsOn:
    - name: cert-manager
      namespace: cert-manager

  values:
    image:
      name: traefik
      tag: 2.6.1
      pullPolicy: IfNotPresent

    deployment:
      kind: Deployment
      replicas: 1

      additionalContainers:
        - name: cloudflared
          image: cloudflare/cloudflared:2022.3.0
          args:
          - tunnel
          # Points cloudflared to the config file, which configures what
          # cloudflared will actually do. This file is created by a ConfigMap
          # below.
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
          - name: cloudflared-config
            mountPath: /etc/cloudflared/config
            readOnly: true
          - name: cloudflared-tunnel-credentials
            mountPath: /etc/cloudflared/creds
            readOnly: true
          - name: cloudflared-tunnel-cert
            mountPath: /etc/cloudflared
            readOnly: true
      additionalVolumes:
        - name: cloudflared-tunnel-credentials
          secret:
            secretName: cloudflared-tunnel-credentials
        - name: cloudflared-tunnel-cert
          secret:
            secretName: cloudflared-tunnel-cert
        - name: cloudflared-config
          configMap:
            name: cloudflared-config
            items:
            - key: config.yaml
              path: config.yaml

    env:
    - name: TZ
      value: ${CLUSTER_TIMEZONE}

    logs:
      general:
        format: json
        level: DEBUG
      access:
        enabled: true
        format: json

    ingressClass:
      enabled: true
      isDefaultClass: true
      fallbackApiVersion: v1
    ingressRoute:
      dashboard:
        enabled: false

    globalArguments:
    - "--global.checknewversion=false"
    - "--global.sendanonymoususage=true"
    additionalArguments:
    - "--metrics.prometheus=false"
    - "--metrics.prometheus.entryPoint=metrics"
    # Allow these IPs to set the X-Forwarded-* headers.
    #- "--entryPoints.websecure.forwardedHeaders.trustedIPs=${CLUSTER_CF_IPV4_IPS}"
    # Disable SSL verification on backend
    - "--serverstransport.insecureskipverify=true"
    - "--providers.kubernetesingress.ingressclass=traefik"
    # providers.kubernetesingress.ingressendpoint.hostname is set for external-dns support
    - "--providers.kubernetesingress.ingressendpoint.hostname=78abaffc-b9bf-445d-a12c-7d7e3fdbf35a.cfargotunnel.com"

    ports:
      traefik:
        expose: false
        port: 9000
        protocol: TCP
      web:
        # expose: false
        # exposedPort: 80
        # port: 8000
        # protocol: TCP
        redirectTo: websecure
      websecure:
        expose: true
        exposedPort: 443
        port: 8443
        protocol: TCP
        tls:
          enabled: true
          options: "default"
      metrics:
        port: 8082
        expose: true
        exposedPort: 8082

    service:
      enabled: true
      type: ClusterIP
      #type: LoadBalancer
      #spec:
      #  loadBalancerIP: ${CLUSTER_SVC_TRAEFIK_IP}
      #  externalTrafficPolicy: Local

    dnsPolicy: ClusterFirst

    pilot:
      enabled: false
    experimental:
      plugins:
        enabled: false

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - traefik
          topologyKey: kubernetes.io/hostname

    resources:
      requests:
        cpu: 50m
        memory: 72Mi
      limits:
        memory: 512Mi
