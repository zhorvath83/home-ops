---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unbound-config
  namespace: default
data:
  unbound.conf: |
    server:

      # The verbosity level 0 means no verbosity, only errors.
      # Level 1 gives operational information.
      # Level 2 gives detailed operational information.
      # Level 3 gives query level information, output per query.
      # Level 4 gives algorithm level information.
      # Level 5 logs client identification for cache misses.
        verbosity: 1

        statistics-interval: 600
        statistics-cumulative: yes

      # specify the interfaces to answer queries from by ip-address.
      # interface: 127.0.0.1
        interface: 0.0.0.0
        port: 5053

        do-ip4: yes
        do-ip6: no
        do-udp: yes
        do-tcp: yes

        prefer-ip6: no

      # control which client ips are allowed to make (recursive) queries to this
      # server. Specify classless netblocks with /size and action.  By default
      # everything is refused, except for localhost.  
        access-control: 10.0.0.0/8 allow
        access-control: 127.0.0.0/8 allow
        access-control: 172.16.0.0/12 allow
        access-control: 192.168.0.0/16 allow


      # Enforce privacy of these addresses. Strips them away from answers.  It may
      # cause DNSSEC validation to additionally mark it as bogus.  Protects against
      # 'DNS Rebinding' (uses browser as network proxy).  Only 'private-domain' and
      # 'local-data' names are allowed to have these private addresses. No default.
        private-address: 192.168.0.0/16
        private-address: 169.254.0.0/16
        private-address: 172.16.0.0/12
        private-address: 10.0.0.0/8
        private-address: fd00::/8
        private-address: fe80::/10


      # Will trust glue only if it is within the servers authority.
      # Harden against out of zone rrsets, to avoid spoofing attempts. 
      # Hardening queries multiple name servers for the same data to make
      # spoofing significantly harder and does not mandate dnssec.
        harden-glue: yes

      # Ignore very large queries.
        harden-large-queries: yes

      # Require DNSSEC data for trust-anchored zones, if such data is absent, the
      # zone becomes  bogus.  Harden against receiving dnssec-stripped data. If you
      # turn it off, failing to validate dnskey data for a trustanchor will trigger
      # insecure mode for that zone (like without a trustanchor).  Default on,
      # which insists on dnssec data for trust-anchored zones.
        harden-dnssec-stripped: yes

      # Use 0x20-encoded random bits in the query to foil spoof attempts.
      # http://tools.ietf.org/html/draft-vixie-dnsext-dns0x20-00
      # While upper and lower case letters are allowed in domain names, no significance
      # is attached to the case. That is, two names with the same spelling but
      # different case are to be treated as if identical. This means calomel.org is the
      # same as CaLoMeL.Org which is the same as CALOMEL.ORG.
        use-caps-for-id: yes

      # Number of bytes size to advertise as the EDNS reassembly buffer
      # size. This is the value put into  datagrams over UDP towards
      # peers. The actual buffer size is determined by msg-buffer-size
      # (both for TCP and UDP).
        edns-buffer-size: 1232

      # Rotates RRSet order in response (the pseudo-random 
      # number is taken from Ensure privacy of local IP 
      # ranges the query ID, for speed and thread safety).  
      # private-address: 192.168.0.0/16
        rrset-roundrobin: yes

      # the time to live (TTL) value lower bound, in seconds. Default 0.
      # If more than an hour could easily give trouble due to stale data.
        cache-min-ttl: 3600

      # the time to live (TTL) value cap for RRsets and messages in the
      # cache. Items are not cached for longer. In seconds.
        cache-max-ttl: 86400

      # Have unbound attempt to serve old responses from cache with a TTL of 0 in
      # the response without waiting for the actual resolution to finish. The
      # actual resolution answer ends up in the cache later on. 
        serve-expired: yes
      
      # Harden against algorithm downgrade when multiple algorithms are
      # advertised in the DS record.
        harden-algo-downgrade: yes
      
      # Ignore very small EDNS buffer sizes from queries.
        harden-short-bufsize: yes
      
      # Refuse id.server and hostname.bind queries
        hide-identity: yes
      
      # Report this identity rather than the hostname of the server.
        identity: "Server"
      
      # Refuse version.server and version.bind queries
        hide-version: yes
      
      # Prevent the unbound server from forking into the background as a daemon
        do-daemonize: no
      
      # Number  of  bytes size of the aggressive negative cache.
        neg-cache-size: 4m
      
      # Send minimum amount of information to upstream servers to enhance privacy
        qname-minimisation: yes
      
      # Deny queries of type ANY with an empty response.
      # Works only on version 1.8 and above
        deny-any: yes

      # Do no insert authority/additional sections into response messages when
      # those sections are not required. This reduces response size
      # significantly, and may avoid TCP fallback for some responses. This may
      # cause a slight speedup
        minimal-responses: yes
      
      # Perform prefetching of close to expired message cache entries
      # This only applies to domains that have been frequently queried
      # This flag updates the cached domains
        prefetch: yes
      
      # Fetch the DNSKEYs earlier in the validation process, when a DS record is
      # encountered. This lowers the latency of requests at the expense of little
      # more CPU usage.
        prefetch-key: yes
      
      # One thread should be sufficient, can be increased on beefy machines. In reality for 
      # most users running on small networks or on a single machine, it should be unnecessary
      # to seek performance enhancement by increasing num-threads above 1.
        num-threads: 1

      # more cache memory. rrset-cache-size should twice what msg-cache-size is.
        msg-cache-size: 50m
        rrset-cache-size: 100m
    
      # Faster UDP with multithreading (only on Linux).
        so-reuseport: yes
      
      # Ensure kernel buffer is large enough to not lose messages in traffix spikes
        so-rcvbuf: 4m
        so-sndbuf: 4m
      
      # Set the total number of unwanted replies to keep track of in every thread.
      # When it reaches the threshold, a defensive action of clearing the rrset
      # and message caches is taken, hopefully flushing away any poison.
      # Unbound suggests a value of 10 million.
        unwanted-reply-threshold: 100000

      directory: "/etc/unbound"
      
      pidfile: "/var/run/unbound/unbound.pid"

      identity: "docker-unbound"
      auto-trust-anchor-file: "/var/run/unbound/root.key"

      # Minimize logs
      # Do not print one line per query to the log
        log-queries: no
      # Do not print one line per reply to the log
        log-replies: no
      # Do not print log lines that say why queries return SERVFAIL to clients
        log-servfail: no
      # Do not print log lines to inform about local zone actions
        log-local-actions: no
      # Do not print log lines that say why queries return SERVFAIL to clients
        logfile: /dev/null
        # logfile: ""

      include: "/config/*.conf"
