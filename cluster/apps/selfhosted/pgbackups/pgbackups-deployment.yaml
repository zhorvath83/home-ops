---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbackups
  namespace: selfhosted
  labels:
    app.kubernetes.io/name: pgbackups
spec:
  replicas: 1
  strategy:
    # All existing Pods are killed before new ones are created
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pgbackups
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgbackups
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - postgresql
                topologyKey: kubernetes.io/hostname
      containers:
        - name: pgbackups
          image: prodrigestivill/postgres-backup-local:14-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: ${CLUSTER_TIMEZONE}
            - name: POSTGRES_HOST
              value: postgresql.selfhosted.svc.cluster.local
            - name: POSTGRES_DB
              value: postgres,recipes
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: ${SECRET_PSQL_POSTGRES_PWD}
            - name: POSTGRES_EXTRA_OPTS
              value: "-Z9 --schema=public --blobs"
            - name: SCHEDULE
              value: "@daily"
            - name: BACKUP_KEEP_DAYS
              value: "7"
            - name: BACKUP_KEEP_WEEKS
              value: "4"
            - name: BACKUP_KEEP_MONTHS
              value: "3"
            - name: HEALTHCHECK_PORT
              value: "8080"
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: backup-share
              mountPath: /backups
              subPath: pgbackups
      volumes:
        - name: backup-share
          persistentVolumeClaim:
            claimName: backup-share
