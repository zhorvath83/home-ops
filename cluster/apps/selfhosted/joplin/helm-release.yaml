---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app joplin
  namespace: selfhosted
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: joplin-server
      version: 5.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    image:
      repository: joplin/server
      tag: 2.7.4-beta
    global:
      nameOverride: *app
    ingress:
      main:
        enabled: true
        hosts:
          - host: &host "joplin.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        annotations:
          external-dns.alpha.kubernetes.io/target: "cf-argo-tunnel.${SECRET_DOMAIN}"
          kubernetes.io/ingress.class: nginx
        tls:
          - hosts:
              - *host

    env:
      TZ: "${CLUSTER_TIMEZONE}"
      APP_BASE_URL: "https://joplin.${SECRET_DOMAIN}"
      DB_CLIENT: pg
      POSTGRES_HOST: postgresql.selfhosted.svc.cluster.local
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: joplin
      POSTGRES_USER: joplin
      POSTGRES_PASSWORD: ${SECRET_PSQL_JOPLIN_PWD}
      # MAILER_ENABLED: 1
      # MAILER_HOST: .svc.cluster.local
      # MAILER_PORT: 587
      # MAILER_SECURE: 1
      # MAILER_NOREPLY_NAME: Joplin
      # MAILER_NOREPLY_EMAIL: noreply@${SECRET_DOMAIN}

    # persistence:
    #   data:
    #     enabled: true
    #     accessMode: ReadWriteOnce
    #     existingClaim: "joplin-data-pvc"

    initContainers:
      database-bootstrap:
        name: database-bootstrap
        image: bitnami/postgresql:14.2.0-debian-10-r88
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_PASSWORD
            value: ${SECRET_PSQL_POSTGRES_PWD}
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_DB_PASSWORD
            value: ${SECRET_PSQL_JOPLIN_PWD}
          - name: POSTGRES_DB_USER
            value: joplin
          - name: POSTGRES_HOST
            value: postgresql.selfhosted.svc.cluster.local
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB_NAME
            value: joplin
        command:
          - sh
          - "-c"
          - |
            until pg_isready -h $POSTGRES_HOST -p 5432 -U postgres
            do
              echo "Waiting for PostgreSQL... "
              sleep 5;
            done
            if PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -lqt | cut -d \| -f 1 | grep -qw $POSTGRES_DB_NAME; then
              PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER <<-EOSQL
              ALTER USER $POSTGRES_DB_USER WITH NOSUPERUSER;
            EOSQL
              echo "database already exist, exiting initContainer"
              exit 0
            else
              echo "Database does not exist. creating...."
              PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER <<-EOSQL
              CREATE DATABASE $POSTGRES_DB_NAME;
              CREATE USER $POSTGRES_DB_USER WITH ENCRYPTED PASSWORD '$POSTGRES_DB_PASSWORD';
              GRANT all privileges ON database $POSTGRES_DB_NAME TO $POSTGRES_DB_USER;
              ALTER DATABASE $POSTGRES_DB_NAME OWNER TO $POSTGRES_DB_USER;
              ALTER ROLE $POSTGRES_DB_USER SET client_encoding TO 'utf8';
              ALTER ROLE $POSTGRES_DB_USER SET default_transaction_isolation TO 'read committed';
              ALTER ROLE $POSTGRES_DB_USER SET timezone TO 'UTC';
              ALTER USER $POSTGRES_DB_USER WITH SUPERUSER;
            EOSQL
            echo "Done"
            fi
