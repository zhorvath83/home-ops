---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: recipes
  namespace: selfhosted
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: recipes
      version: 6.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
  rollback:
    timeout: 10m
    recreate: true

  dependsOn:
    - name: postgresql

  values:
    image:
      repository: vabene1111/recipes
      tag: 0.16.8
      pullPolicy: IfNotPresent
    sidecar:
      image:
        repository: nginx
        tag: 1.21.3-alpine
        pullPolicy: IfNotPresent

    env:
      TIMEZONE: ${CLUSTER_TIMEZONE}
      DEBUG: "1"
      ALLOWED_HOSTS: "*"
      SECRET_KEY: ${SECRET_RECIPES_SECRET_KEY}
      DB_ENGINE: django.db.backends.postgresql
      POSTGRES_HOST: postgresql.selfhosted.svc.cluster.local
      POSTGRES_PORT: 5432
      POSTGRES_USER: recipes
      POSTGRES_DB: recipes
      POSTGRES_PASSWORD: ${SECRET_PSQL_RECIPES_PWD}
      GUNICORN_MEDIA: "0"
      FRACTION_PREF_DEFAULT: "0"
      COMMENT_PREF_DEFAULT: "0"
      SHOPPING_MIN_AUTOSYNC_INTERVAL: "5"
      EMAIL_HOST: '${SECRET_SMTP_HOST}'
      EMAIL_PORT: '${SECRET_SMTP_PORT}'
      EMAIL_HOST_USER: '${SECRET_SMTP_USER}'
      EMAIL_HOST_PASSWORD: '${SECRET_SMTP_PASSWD}'
      EMAIL_USE_TLS: 1
      EMAIL_USE_SSL: 0
      DEFAULT_FROM_EMAIL: '${SECRET_EMAIL_2}'
      ACCOUNT_EMAIL_SUBJECT_PREFIX: "[Tandoor Recipes] "

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.middlewares: networking-middleware-chain-cf-auth@kubernetescrd
        hosts:
          - host: "recipes.${SECRET_CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "recipes.${SECRET_CLUSTER_DOMAIN}"
    persistence:
      media:
        enabled: true
        existingClaim: recipes-media-data
      static:
        enabled: true
        type: emptyDir

    initContainers:
      database-bootstrap:
        name: database-bootstrap
        image: public.ecr.aws/bitnami/postgresql:13.4.0
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_PASSWORD
            value: ${SECRET_PSQL_POSTGRES_PWD}
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_DB_PASSWORD
            value: ${SECRET_PSQL_RECIPES_PWD}
          - name: POSTGRES_DB_USER
            value: recipes
          - name: POSTGRES_HOST
            value: postgresql.selfhosted.svc.cluster.local
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB_NAME
            value: recipes
        command:
          - sh
          - "-c"
          - |
            until pg_isready -h $POSTGRES_HOST -p 5432 -U postgres
            do
              echo "Waiting for PostgreSQL... "
              sleep 5;
            done
            if PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -lqt | cut -d \| -f 1 | grep -qw $POSTGRES_DB_NAME; then
              PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER <<-EOSQL
              ALTER USER $POSTGRES_DB_USER WITH SUPERUSER;
            EOSQL
              echo "database already exist, exiting initContainer"
              exit 0
            else
              echo "Database does not exist. creating...."
              PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER <<-EOSQL
              CREATE DATABASE $POSTGRES_DB_NAME;
              CREATE USER $POSTGRES_DB_USER WITH ENCRYPTED PASSWORD '$POSTGRES_DB_PASSWORD';
              GRANT all privileges ON database $POSTGRES_DB_NAME TO $POSTGRES_DB_USER;
              ALTER DATABASE $POSTGRES_DB_NAME OWNER TO $POSTGRES_DB_USER;
              ALTER ROLE $POSTGRES_DB_USER SET client_encoding TO 'utf8';
              ALTER ROLE $POSTGRES_DB_USER SET default_transaction_isolation TO 'read committed';
              ALTER ROLE $POSTGRES_DB_USER SET timezone TO 'UTC';
              ALTER USER $POSTGRES_DB_USER WITH SUPERUSER;
            EOSQL
            echo "Done"
            fi
